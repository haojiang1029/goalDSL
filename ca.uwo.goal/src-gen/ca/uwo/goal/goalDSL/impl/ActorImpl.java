/**
 * generated by Xtext 2.32.0
 */
package ca.uwo.goal.goalDSL.impl;

import ca.uwo.goal.goalDSL.Actor;
import ca.uwo.goal.goalDSL.Contribution;
import ca.uwo.goal.goalDSL.GoalDSLPackage;
import ca.uwo.goal.goalDSL.IntentionalElement;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Actor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.uwo.goal.goalDSL.impl.ActorImpl#getName <em>Name</em>}</li>
 *   <li>{@link ca.uwo.goal.goalDSL.impl.ActorImpl#getIntentionalElements <em>Intentional Elements</em>}</li>
 *   <li>{@link ca.uwo.goal.goalDSL.impl.ActorImpl#getContribution <em>Contribution</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ActorImpl extends MinimalEObjectImpl.Container implements Actor
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getIntentionalElements() <em>Intentional Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntentionalElements()
   * @generated
   * @ordered
   */
  protected EList<IntentionalElement> intentionalElements;

  /**
   * The cached value of the '{@link #getContribution() <em>Contribution</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContribution()
   * @generated
   * @ordered
   */
  protected EList<Contribution> contribution;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ActorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GoalDSLPackage.Literals.ACTOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GoalDSLPackage.ACTOR__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IntentionalElement> getIntentionalElements()
  {
    if (intentionalElements == null)
    {
      intentionalElements = new EObjectContainmentEList<IntentionalElement>(IntentionalElement.class, this, GoalDSLPackage.ACTOR__INTENTIONAL_ELEMENTS);
    }
    return intentionalElements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Contribution> getContribution()
  {
    if (contribution == null)
    {
      contribution = new EObjectContainmentEList<Contribution>(Contribution.class, this, GoalDSLPackage.ACTOR__CONTRIBUTION);
    }
    return contribution;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GoalDSLPackage.ACTOR__INTENTIONAL_ELEMENTS:
        return ((InternalEList<?>)getIntentionalElements()).basicRemove(otherEnd, msgs);
      case GoalDSLPackage.ACTOR__CONTRIBUTION:
        return ((InternalEList<?>)getContribution()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GoalDSLPackage.ACTOR__NAME:
        return getName();
      case GoalDSLPackage.ACTOR__INTENTIONAL_ELEMENTS:
        return getIntentionalElements();
      case GoalDSLPackage.ACTOR__CONTRIBUTION:
        return getContribution();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GoalDSLPackage.ACTOR__NAME:
        setName((String)newValue);
        return;
      case GoalDSLPackage.ACTOR__INTENTIONAL_ELEMENTS:
        getIntentionalElements().clear();
        getIntentionalElements().addAll((Collection<? extends IntentionalElement>)newValue);
        return;
      case GoalDSLPackage.ACTOR__CONTRIBUTION:
        getContribution().clear();
        getContribution().addAll((Collection<? extends Contribution>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GoalDSLPackage.ACTOR__NAME:
        setName(NAME_EDEFAULT);
        return;
      case GoalDSLPackage.ACTOR__INTENTIONAL_ELEMENTS:
        getIntentionalElements().clear();
        return;
      case GoalDSLPackage.ACTOR__CONTRIBUTION:
        getContribution().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GoalDSLPackage.ACTOR__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case GoalDSLPackage.ACTOR__INTENTIONAL_ELEMENTS:
        return intentionalElements != null && !intentionalElements.isEmpty();
      case GoalDSLPackage.ACTOR__CONTRIBUTION:
        return contribution != null && !contribution.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //ActorImpl
