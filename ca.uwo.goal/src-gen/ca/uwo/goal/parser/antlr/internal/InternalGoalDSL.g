/*
 * generated by Xtext 2.32.0
 */
grammar InternalGoalDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ca.uwo.goal.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ca.uwo.goal.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ca.uwo.goal.services.GoalDSLGrammarAccess;

}

@parser::members {

 	private GoalDSLGrammarAccess grammarAccess;

    public InternalGoalDSLParser(TokenStream input, GoalDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GoalSpecification";
   	}

   	@Override
   	protected GoalDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGoalSpecification
entryRuleGoalSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoalSpecificationRule()); }
	iv_ruleGoalSpecification=ruleGoalSpecification
	{ $current=$iv_ruleGoalSpecification.current; }
	EOF;

// Rule GoalSpecification
ruleGoalSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='goal'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoalSpecificationAccess().getGoalKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGoalSpecificationAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalSpecificationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGoalSpecificationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGoalSpecificationAccess().getRootRootParserRuleCall_3_0());
				}
				lv_root_3_0=ruleRoot
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGoalSpecificationRule());
					}
					set(
						$current,
						"root",
						lv_root_3_0,
						"ca.uwo.goal.GoalDSL.Root");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getGoalSpecificationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRoot
entryRuleRoot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootRule()); }
	iv_ruleRoot=ruleRoot
	{ $current=$iv_ruleRoot.current; }
	EOF;

// Rule Root
ruleRoot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRootAccess().getRootAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getActorsActorParserRuleCall_1_0());
				}
				lv_actors_1_0=ruleActor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"actors",
						lv_actors_1_0,
						"ca.uwo.goal.GoalDSL.Actor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootAccess().getDependenciesDependencyParserRuleCall_2_0());
				}
				lv_dependencies_2_0=ruleDependency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootRule());
					}
					add(
						$current,
						"dependencies",
						lv_dependencies_2_0,
						"ca.uwo.goal.GoalDSL.Dependency");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleIntentionalElement
entryRuleIntentionalElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntentionalElementRule()); }
	iv_ruleIntentionalElement=ruleIntentionalElement
	{ $current=$iv_ruleIntentionalElement.current; }
	EOF;

// Rule IntentionalElement
ruleIntentionalElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIntentionalElementAccess().getGoalTaskElementParserRuleCall_0());
		}
		this_GoalTaskElement_0=ruleGoalTaskElement
		{
			$current = $this_GoalTaskElement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIntentionalElementAccess().getResourceParserRuleCall_1());
		}
		this_Resource_1=ruleResource
		{
			$current = $this_Resource_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGoalTaskElement
entryRuleGoalTaskElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoalTaskElementRule()); }
	iv_ruleGoalTaskElement=ruleGoalTaskElement
	{ $current=$iv_ruleGoalTaskElement.current; }
	EOF;

// Rule GoalTaskElement
ruleGoalTaskElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getGoalTaskElementAccess().getGoalParserRuleCall_0());
		}
		this_Goal_0=ruleGoal
		{
			$current = $this_Goal_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getGoalTaskElementAccess().getTaskParserRuleCall_1());
		}
		this_Task_1=ruleTask
		{
			$current = $this_Task_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actor'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getActorAccess().getSemicolonKeyword_2_0());
			}
			    |
			(
				otherlv_3='{'
				{
					newLeafNode(otherlv_3, grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getActorAccess().getIntentionalElementsIntentionalElementParserRuleCall_2_1_1_0());
						}
						lv_intentionalElements_4_0=ruleIntentionalElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorRule());
							}
							add(
								$current,
								"intentionalElements",
								lv_intentionalElements_4_0,
								"ca.uwo.goal.GoalDSL.IntentionalElement");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						{
							newCompositeNode(grammarAccess.getActorAccess().getContributionContributionParserRuleCall_2_1_2_0());
						}
						lv_contribution_5_0=ruleContribution
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getActorRule());
							}
							add(
								$current,
								"contribution",
								lv_contribution_5_0,
								"ca.uwo.goal.GoalDSL.Contribution");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_6='}'
				{
					newLeafNode(otherlv_6, grammarAccess.getActorAccess().getRightCurlyBracketKeyword_2_1_3());
				}
			)
		)
	)
;

// Entry rule entryRuleGoal
entryRuleGoal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoalRule()); }
	iv_ruleGoal=ruleGoal
	{ $current=$iv_ruleGoal.current; }
	EOF;

// Rule Goal
ruleGoal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='goal'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoalAccess().getGoalKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGoalRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getGoalAccess().getSemicolonKeyword_2_0());
			}
			    |
			(
				otherlv_3='decomposesTo'
				{
					newLeafNode(otherlv_3, grammarAccess.getGoalAccess().getDecomposesToKeyword_2_1_0());
				}
				otherlv_4='('
				{
					newLeafNode(otherlv_4, grammarAccess.getGoalAccess().getLeftParenthesisKeyword_2_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGoalAccess().getDecompositionTypeDecompositionTypeEnumRuleCall_2_1_2_0());
						}
						lv_decompositionType_5_0=ruleDecompositionType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGoalRule());
							}
							set(
								$current,
								"decompositionType",
								lv_decompositionType_5_0,
								"ca.uwo.goal.GoalDSL.DecompositionType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getGoalAccess().getRightParenthesisKeyword_2_1_3());
				}
				otherlv_7='{'
				{
					newLeafNode(otherlv_7, grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_2_1_4());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGoalAccess().getChilldrenGoalTaskElementParserRuleCall_2_1_5_0());
						}
						lv_chilldren_8_0=ruleGoalTaskElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGoalRule());
							}
							add(
								$current,
								"chilldren",
								lv_chilldren_8_0,
								"ca.uwo.goal.GoalDSL.GoalTaskElement");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_9='}'
				{
					newLeafNode(otherlv_9, grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_2_1_6());
				}
				otherlv_10=';'
				{
					newLeafNode(otherlv_10, grammarAccess.getGoalAccess().getSemicolonKeyword_2_1_7());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getGoalRule());
							}
						}
						otherlv_11=RULE_ID
						{
							newLeafNode(otherlv_11, grammarAccess.getGoalAccess().getParentGoalTaskElementCrossReference_2_1_8_0());
						}
					)
				)?
			)
		)
	)
;

// Entry rule entryRuleTask
entryRuleTask returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTaskRule()); }
	iv_ruleTask=ruleTask
	{ $current=$iv_ruleTask.current; }
	EOF;

// Rule Task
ruleTask returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='task'
		{
			newLeafNode(otherlv_0, grammarAccess.getTaskAccess().getTaskKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTaskRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getTaskAccess().getSemicolonKeyword_2_0());
			}
			    |
			(
				otherlv_3='decomposesTo'
				{
					newLeafNode(otherlv_3, grammarAccess.getTaskAccess().getDecomposesToKeyword_2_1_0());
				}
				otherlv_4='('
				{
					newLeafNode(otherlv_4, grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTaskAccess().getDecompositionTypeDecompositionTypeEnumRuleCall_2_1_2_0());
						}
						lv_decompositionType_5_0=ruleDecompositionType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTaskRule());
							}
							set(
								$current,
								"decompositionType",
								lv_decompositionType_5_0,
								"ca.uwo.goal.GoalDSL.DecompositionType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6=')'
				{
					newLeafNode(otherlv_6, grammarAccess.getTaskAccess().getRightParenthesisKeyword_2_1_3());
				}
				otherlv_7='{'
				{
					newLeafNode(otherlv_7, grammarAccess.getTaskAccess().getLeftCurlyBracketKeyword_2_1_4());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTaskAccess().getChilldrenGoalTaskElementParserRuleCall_2_1_5_0());
						}
						lv_chilldren_8_0=ruleGoalTaskElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTaskRule());
							}
							add(
								$current,
								"chilldren",
								lv_chilldren_8_0,
								"ca.uwo.goal.GoalDSL.GoalTaskElement");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_9='}'
				{
					newLeafNode(otherlv_9, grammarAccess.getTaskAccess().getRightCurlyBracketKeyword_2_1_6());
				}
				otherlv_10=';'
				{
					newLeafNode(otherlv_10, grammarAccess.getTaskAccess().getSemicolonKeyword_2_1_7());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTaskRule());
							}
						}
						otherlv_11=RULE_ID
						{
							newLeafNode(otherlv_11, grammarAccess.getTaskAccess().getParentGoalTaskElementCrossReference_2_1_8_0());
						}
					)
				)?
			)
		)
	)
;

// Entry rule entryRuleResource
entryRuleResource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResourceRule()); }
	iv_ruleResource=ruleResource
	{ $current=$iv_ruleResource.current; }
	EOF;

// Rule Resource
ruleResource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='resource'
		{
			newLeafNode(otherlv_0, grammarAccess.getResourceAccess().getResourceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getResourceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='neededBy'
			{
				newLeafNode(otherlv_2, grammarAccess.getResourceAccess().getNeededByKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getResourceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getResourceAccess().getDestTaskCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getResourceAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getResourceRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getResourceAccess().getDestTaskCrossReference_2_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleContribution
entryRuleContribution returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContributionRule()); }
	iv_ruleContribution=ruleContribution
	{ $current=$iv_ruleContribution.current; }
	EOF;

// Rule Contribution
ruleContribution returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContributionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getContributionAccess().getSrcIntentionalElementCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='contributesTo'
		{
			newLeafNode(otherlv_1, grammarAccess.getContributionAccess().getContributesToKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getContributionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContributionAccess().getContributionTypeContributionTypeEnumRuleCall_3_0());
				}
				lv_contributionType_3_0=ruleContributionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContributionRule());
					}
					set(
						$current,
						"contributionType",
						lv_contributionType_3_0,
						"ca.uwo.goal.GoalDSL.ContributionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getContributionAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContributionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getContributionAccess().getDestGoalTaskElementCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getContributionAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContributionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getContributionAccess().getDestGoalTaskElementCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDependency
entryRuleDependency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependencyRule()); }
	iv_ruleDependency=ruleDependency
	{ $current=$iv_ruleDependency.current; }
	EOF;

// Rule Dependency
ruleDependency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDependencyAccess().getSrcIntentionalElementCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='dependsOn'
		{
			newLeafNode(otherlv_1, grammarAccess.getDependencyAccess().getDependsOnKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDependencyRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDependencyAccess().getDestIntentionalElementCrossReference_2_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getDependencyAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDependencyRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDependencyAccess().getDestIntentionalElementCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Rule DecompositionType
ruleDecompositionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='and'
			{
				$current = grammarAccess.getDecompositionTypeAccess().getANDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDecompositionTypeAccess().getANDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='or'
			{
				$current = grammarAccess.getDecompositionTypeAccess().getOREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDecompositionTypeAccess().getOREnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule ContributionType
ruleContributionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='++S'
			{
				$current = grammarAccess.getContributionTypeAccess().getMAKEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getContributionTypeAccess().getMAKEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='--S'
			{
				$current = grammarAccess.getContributionTypeAccess().getBREAKEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getContributionTypeAccess().getBREAKEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='++D'
			{
				$current = grammarAccess.getContributionTypeAccess().getNEGATION_MAKEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getContributionTypeAccess().getNEGATION_MAKEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='--D'
			{
				$current = grammarAccess.getContributionTypeAccess().getNEGATION_BREAKEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getContributionTypeAccess().getNEGATION_BREAKEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
